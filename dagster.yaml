# Postgres storage can be set using either credentials or a connection string.  This requires that
# the `dagster-postgres` library be installed.
# this config manually sets the Postgres credentials
storage:
  postgres:
    postgres_db:
      username:
        env: postgres
      password:
        env: postgres
      hostname:
        env: postgres
      db_name:
        env: postgres
      port: 5432

run_launcher:
  module: dagster.core.launcher
  class: DefaultRunLauncher

compute_logs:
  module: dagster.core.storage.local_compute_log_manager
  class: LocalComputeLogManager
  config:
    base_dir: /path/to/directory

# there are two possible ways to configure LocalArtifactStorage
# example local_artifact_storage setup pointing to /var/shared/dagster directory
local_artifact_storage:
  module: dagster.core.storage.root
  class: LocalArtifactStorage
  config:
    base_dir: "/path/to/dir"

  # Allows opting out of Dagster collecting usage statistics.
telemetry:
  enabled: false

# Configures how long Dagster waits for code locations
# to load before timing out.
code_servers:
  local_startup_timeout: 120

# Configures how long Dagster keeps sensor / schedule tick data
retention:
  schedule:
    purge_after_days: 90 # sets retention policy for schedule ticks of all types
  sensor:
    purge_after_days:
      skipped: 7
      failure: 30
      success: -1 # keep success ticks indefinitely

sensors:
  use_threads: true
  num_workers: 8
# the schedules key allows you to configure how schedules are evaluated. By default, Dagster evaluates schedules one at a time.
# To evaluate multiple schedules in parallel simultaneously, set the use_threads and num_workers keys
schedules:
  use_threads: true
  num_workers: 8

